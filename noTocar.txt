//usuario random

/* export async function usuarioRandom() {
  const notificationToken = await registerForPushNotificationsAsync();
  
  const userDB = await fetch(`${PROD_URL}/usuarios`, {
    method: "POST",
    headers: {
      Accept: "application/json",
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      notificationToken,
    }),
  })
    .then((res) => res.json())
    .then(async (res) => {
      if (!res.ok) return false;

      await AsyncStorage.setItem("user", JSON.stringify(res.user));
      return res.user;
    })
    .catch((e) => {
      console.log("err ", e);
      return false;
    });

  return userDB;
} */

//-------------------------------------------------------
//actualizarLocation 

/* export async function actualizarLocation(user) {
  const ubi = await myLocation2();

  const userDB = await fetch(`${PROD_URL}/usuarios/location`, {
    method: "PUT",
    headers: {
      Accept: "application/json",
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      ubi,
      user,
    }),
  })
    .then((res) => res.json())
    .then(async (res) => {
      if (!res.ok) return {};
      await AsyncStorage.setItem("user", JSON.stringify(res.usuario));
      return res.usuario;
    })
    .catch((e) => {
      console.log("err ", e);
      return {};
    });

  return userDB;
} */

//-------------------------------------------------------
//segunda info perro/////////////

return (
  <Modal
    animationType="slide"
    transparent={false}
    visible={true}
    presentationStyle="pageSheet"
    onRequestClose={() => handlerRender(false, "tarjetas")}
  >
    <View style={{ height: 350, width: null }}>
      <Image source={{ uri: foto }} style={{ flex: 1 }} />
    </View>
    <View>
      <Card
        style={{
          borderTopRightRadius: 40,
          borderTopLeftRadius: 40,
          marginTop: -40,
          marginLeft: -1,
          width: Dimensions.get("window").width + 1,
          height: "100%",
        }}
      >
        <Card
          style={{
            //marginLeft: windowWidth / 2 - 50,
            marginTop: -25,
            height: 50,
            width: 150,
            borderRadius: 15,
            //borderRadius: 100 / 2,
            alignSelf: "center",
            alignItems: "center",
            /* borderWidth: 3,
        borderColor: "#f2f2f2", */
          }}
        >
          <Text
            style={{
              marginTop: 15,
              fontWeight: "bold",
              color: colores.main,
            }}
          >
            {mascota.petName}
          </Text>
        </Card>

        <Card style={{ marginTop: 20, height: 110, width: null }}>
          {renderMapInfo()}
        </Card>

        <View>
          <CardItem header>
            <Text style={{ color: "grey" }}> Descripci√≥n</Text>
          </CardItem>
          <CardItem style={{ marginTop: -15, marginBottom: 15 }}>
            <Text style={{ color: "grey" }}>{mascota.petDescription}</Text>
          </CardItem>

          <View
            style={{
              flexDirection: "row",
              justifyContent: "center",
              marginTop: 15,
            }}
          >
            <Card style={styles.charCard}>
              <Text style={styles.cardText}>{mascota.petSex}</Text>
            </Card>
            <Card style={styles.charCard}>
              <Text style={styles.cardText}>{mascota.petSize}</Text>
            </Card>
            <Card style={styles.charCard}>
              <Text style={styles.cardText}>{mascota.petColor}</Text>
            </Card>
          </View>
        </View>

        <View
          style={{
            flexDirection: "row",
            marginTop: 40,
            alignContent: "center",
            alignSelf: "center",
          }}
        >
          <Button
            block
            onPress={() => handlerRender(false, "chat")}
            style={{
              borderRadius: 5,
              width: "50%",
              backgroundColor: colores.mainFill,
            }}
          >
            <Text>Mensajes</Text>
            <Icon name="message1" type="AntDesign" />
          </Button>
        </View>
      </Card>
    </View>
  </Modal>
);

//-------------------------------------------------------------
//---getMascotas-------------------
async function getMascotas(user) {

  function deg2rad(deg) {
    return deg * (Math.PI / 180);
  }

  function distKM(A, B) {
    const R = 6371;
    let aLat = parseFloat(A.location.latitude);
    let aLon = parseFloat(A.location.longitude);
    let bLat = parseFloat(B.location.latitude);
    let bLon = parseFloat(B.location.longitude);

    var dLat = 2 * R * Math.sin(deg2rad(aLat - bLat) / 2);
    var dLon = 2 * R * Math.sin(deg2rad(aLon - bLon) / 2);
    var dist = Math.sqrt(dLat ** 2 + dLon ** 2);

    return dist;
  }

  return await fetch(
    `https://mascotass.herokuapp.com/api/mascotas/${user._id}`,
    {
      method: "GET",
      headers: {
        Accept: "application/json",
        "Content-Type": "multipart/form-data",
      },
    }
  )
    .then((response) => response.json())
    .then((res) => {
      if (res.ok && res.mascotas) {
        return res.mascotas.map((mascota) => {
          let dist = distKM(mascota, user);
          if (dist < 1) {
            dist = dist * 1000;
            dist = Math.round(dist);
            dist = `${dist} mts`;
          } else {
            dist = dist.toFixed(1);
            dist = `${dist} km`;
          }

          return { ...mascota, dist: dist };
        });
      } else return false;
    })
    .catch((error) => console.error(error));
}